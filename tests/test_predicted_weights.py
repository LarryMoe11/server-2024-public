import pytest
import src.predicted_weights as pw
import pandas as pd

## NOTE: this file is a work in progress, more tests need to be added (especially for TBA AIM data pulling)

pred_aim = pd.DataFrame(
    {
        "match_number": {
            0: 1,
            1: 1,
            2: 2,
            3: 2,
            4: 1,
            5: 1,
            6: 10,
            7: 10,
            8: 11,
            9: 11,
            10: 12,
            11: 12,
            12: 13,
            13: 13,
            14: 14,
            15: 14,
            16: 15,
            17: 15,
            18: 16,
            19: 16,
        },
        "team_numbers": {
            0: ["1678", "1160", "254"],
            1: ["5940", "581", "1458"],
            2: ["1678", "1160", "254"],
            3: ["5940", "581", "1458"],
            4: ["3256", "6814", "972"],
            5: ["6059", "4255", "3045"],
            6: ["7419", "8852", "5430"],
            7: ["8045", "199", "4159"],
            8: ["4255", "751", "6418"],
            9: ["2288", "5419", "6619"],
            10: ["9470", "9519", "6814"],
            11: ["766", "1160", "5985"],
            12: ["6238", "972", "7401"],
            13: ["254", "1700", "5940"],
            14: ["7667", "7840", "1678"],
            15: ["3482", "841", "114"],
            16: ["7729", "6884", "9038"],
            17: ["4186", "2204", "4973"],
            18: ["9202", "6059", "9111"],
            19: ["5274", "4698", "649"],
        },
        "alliance_color_is_red": {
            0: True,
            1: False,
            2: True,
            3: False,
            4: True,
            5: False,
            6: True,
            7: False,
            8: True,
            9: False,
            10: True,
            11: False,
            12: True,
            13: False,
            14: True,
            15: False,
            16: True,
            17: False,
            18: True,
            19: False,
        },
        "won_match": {
            0: True,
            1: False,
            2: True,
            3: False,
            4: True,
            5: False,
            6: True,
            7: False,
            8: False,
            9: True,
            10: False,
            11: True,
            12: False,
            13: True,
            14: False,
            15: True,
            16: True,
            17: False,
            18: False,
            19: True,
        },
        "event_key": {
            0: "2024cabe",
            1: "2024cabe",
            2: "2024cabe",
            3: "2024cabe",
            4: "2024cabe",
            5: "2024cabe",
            6: "2024cabe",
            7: "2024cabe",
            8: "2024cabe",
            9: "2024cabe",
            10: "2024cabe",
            11: "2024cabe",
            12: "2024cabe",
            13: "2024cabe",
            14: "2024cabe",
            15: "2024cabe",
            16: "2024cabe",
            17: "2024cabe",
            18: "2024cabe",
            19: "2024cabe",
        },
        "has_actual_data": {
            0: True,
            1: True,
            2: True,
            3: True,
            4: True,
            5: True,
            6: True,
            7: True,
            8: True,
            9: True,
            10: True,
            11: True,
            12: True,
            13: True,
            14: True,
            15: True,
            16: True,
            17: True,
            18: True,
            19: True,
        },
        "actual_score": {
            0: 128,
            1: 126,
            2: 129,
            3: 88,
            4: 84,
            5: 39,
            6: 35,
            7: 29,
            8: 42,
            9: 102,
            10: 28,
            11: 69,
            12: 48,
            13: 151,
            14: 78,
            15: 86,
            16: 46,
            17: 20,
            18: 21,
            19: 81,
        },
        "actual_score_auto": {
            0: 41,
            1: 31,
            2: 36,
            3: 31,
            4: 19,
            5: 11,
            6: 7,
            7: 4,
            8: 9,
            9: 19,
            10: 7,
            11: 26,
            12: 12,
            13: 48,
            14: 32,
            15: 19,
            16: 22,
            17: 5,
            18: 5,
            19: 29,
        },
        "actual_score_tele": {
            0: 70,
            1: 70,
            2: 72,
            3: 47,
            4: 45,
            5: 26,
            6: 24,
            7: 24,
            8: 29,
            9: 68,
            10: 17,
            11: 33,
            12: 29,
            13: 74,
            14: 34,
            15: 51,
            16: 22,
            17: 4,
            18: 13,
            19: 36,
        },
        "actual_score_endgame": {
            0: 10,
            1: 18,
            2: 11,
            3: 10,
            4: 5,
            5: 2,
            6: 4,
            7: 1,
            8: 4,
            9: 15,
            10: 2,
            11: 5,
            12: 5,
            13: 17,
            14: 12,
            15: 4,
            16: 2,
            17: 9,
            18: 3,
            19: 12,
        },
        "actual_foul_points": {
            0: 7,
            1: 7,
            2: 10,
            3: 0,
            4: 15,
            5: 0,
            6: 0,
            7: 0,
            8: 0,
            9: 0,
            10: 2,
            11: 5,
            12: 2,
            13: 12,
            14: 0,
            15: 12,
            16: 0,
            17: 2,
            18: 0,
            19: 4,
        },
        "actual_rp1": {
            0: 1,
            1: 1,
            2: 1,
            3: 0,
            4: 1,
            5: 0,
            6: 0,
            7: 0,
            8: 0,
            9: 1,
            10: 0,
            11: 0,
            12: 0,
            13: 1,
            14: 0,
            15: 0,
            16: 0,
            17: 0,
            18: 0,
            19: 1,
        },
        "actual_rp2": {
            0: 0,
            1: 0,
            2: 0,
            3: 0,
            4: 1,
            5: 0,
            6: 0,
            7: 0,
            8: 0,
            9: 1,
            10: 0,
            11: 0,
            12: 0,
            13: 1,
            14: 1,
            15: 0,
            16: 0,
            17: 0,
            18: 0,
            19: 1,
        },
        "cooperated": {
            0: False,
            1: False,
            2: False,
            3: False,
            4: True,
            5: True,
            6: False,
            7: False,
            8: True,
            9: True,
            10: False,
            11: False,
            12: True,
            13: True,
            14: True,
            15: True,
            16: False,
            17: False,
            18: True,
            19: True,
        },
        "_rel_score_diff": {
            0: 1.0168067226890756,
            1: 1.0168067226890756,
            2: 1.3522727272727273,
            3: 1.3522727272727273,
            4: 1.7692307692307692,
            5: 1.7692307692307692,
            6: 1.206896551724138,
            7: 1.206896551724138,
            8: 0.4117647058823529,
            9: 0.4117647058823529,
            10: 0.40625,
            11: 0.40625,
            12: 0.33093525179856115,
            13: 0.33093525179856115,
            14: 1.054054054054054,
            15: 1.054054054054054,
            16: 2.5555555555555554,
            17: 2.5555555555555554,
            18: 0.2727272727272727,
            19: 0.2727272727272727,
        },
        "_auto_amp": {
            0: 0,
            1: 0,
            2: 0,
            3: 0,
            4: 0,
            5: 0,
            6: 0,
            7: 0,
            8: 0,
            9: 0,
            10: 0,
            11: 0,
            12: 0,
            13: 1,
            14: 0,
            15: 0,
            16: 0,
            17: 0,
            18: 0,
            19: 0,
        },
        "_auto_speaker": {
            0: 7,
            1: 5,
            2: 6,
            3: 5,
            4: 3,
            5: 1,
            6: 1,
            7: 0,
            8: 1,
            9: 3,
            10: 1,
            11: 4,
            12: 2,
            13: 8,
            14: 6,
            15: 3,
            16: 4,
            17: 1,
            18: 1,
            19: 5,
        },
        "_num_leave": {
            0: 3.0,
            1: 3.0,
            2: 3.0,
            3: 3.0,
            4: 2.0,
            5: 3.0,
            6: 1.0,
            7: 2.0,
            8: 2.0,
            9: 2.0,
            10: 1.0,
            11: 3.0,
            12: 1.0,
            13: 3.0,
            14: 1.0,
            15: 2.0,
            16: 1.0,
            17: 0.0,
            18: 0.0,
            19: 2.0,
        },
        "_tele_amp": {
            0: 8,
            1: 8,
            2: 8,
            3: 7,
            4: 8,
            5: 4,
            6: 2,
            7: 0,
            8: 5,
            9: 8,
            10: 4,
            11: 5,
            12: 1,
            13: 8,
            14: 7,
            15: 7,
            16: 0,
            17: 2,
            18: 6,
            19: 3,
        },
        "_tele_speaker_all": {
            0: 13,
            1: 13,
            2: 14,
            3: 8,
            4: 11,
            5: 8,
            6: 8,
            7: 12,
            8: 6,
            9: 15,
            10: 5,
            11: 8,
            12: 14,
            13: 15,
            14: 6,
            15: 10,
            16: 11,
            17: 1,
            18: 2,
            19: 15,
        },
        "_total_gamepieces": {
            0: 20,
            1: 18,
            2: 20,
            3: 13,
            4: 14,
            5: 9,
            6: 9,
            7: 12,
            8: 7,
            9: 18,
            10: 6,
            11: 12,
            12: 16,
            13: 24,
            14: 12,
            15: 13,
            16: 15,
            17: 2,
            18: 3,
            19: 20,
        },
        "_num_park": {
            0: 2,
            1: 1,
            2: 0,
            3: 2,
            4: 2,
            5: 2,
            6: 1,
            7: 1,
            8: 1,
            9: 0,
            10: 2,
            11: 2,
            12: 2,
            13: 1,
            14: 1,
            15: 1,
            16: 2,
            17: 1,
            18: 3,
            19: 1,
        },
        "_num_onstage": {
            0: 1.0,
            1: 2.0,
            2: 2.0,
            3: 1.0,
            4: 1.0,
            5: 0.0,
            6: 1.0,
            7: 0.0,
            8: 1.0,
            9: 3.0,
            10: 0.0,
            11: 1.0,
            12: 1.0,
            13: 2.0,
            14: 2.0,
            15: 1.0,
            16: 0.0,
            17: 2.0,
            18: 0.0,
            19: 2.0,
        },
        "_num_trap": {
            0: 1.0,
            1: 2.0,
            2: 1.0,
            3: 1.0,
            4: 0.0,
            5: 0.0,
            6: 0.0,
            7: 0.0,
            8: 0.0,
            9: 1.0,
            10: 0.0,
            11: 0.0,
            12: 0.0,
            13: 2.0,
            14: 1.0,
            15: 0.0,
            16: 0.0,
            17: 0.0,
            18: 0.0,
            19: 1.0,
        },
        "_actual_score_no_foul": {
            0: 121,
            1: 119,
            2: 119,
            3: 88,
            4: 69,
            5: 39,
            6: 35,
            7: 29,
            8: 42,
            9: 102,
            10: 26,
            11: 64,
            12: 46,
            13: 139,
            14: 78,
            15: 74,
            16: 46,
            17: 18,
            18: 21,
            19: 77,
        },
    }
)
expected_weights = {
    "score": {
        "_auto_speaker": 5.7197091376824645,
        "_auto_amp": 1.8192278880973447,
        "_num_leave": 3.752435742571418,
        "_tele_speaker_all": 2.2411106997227304,
        "_tele_amp": 3.960385273532258,
        "_num_onstage": 0.4810709160886084,
        "_num_trap": 8.975586495247356,
        "_num_park": -4.047265724042282,
    },
    "rp1": {"_total_gamepieces": 0.0024210970549829658},
    "rp2": {
        "_num_onstage": 0.3002116606038424,
        "_num_trap": 0.482931067671826,
        "_num_park": -1.2913975779008697,
    },
    "win_chance": {"_rel_score_diff": 0.8323095166326926},
}


def test_calc_predicted_weights():
    "Test weights calculations."
    assert pw.calc_predicted_weights(pred_aim) == expected_weights
